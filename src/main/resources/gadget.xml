<?xml version="1.0" encoding="UTF-8" ?>
<Module>
    <ModulePrefs title="__MSG_gadget.title__"
    		author="Ingo Mohr"
    		author_email="tellastory73@gmail.com"
    		directory_title="__MSG_gadget.title__"
    		description="__MSG_gadget.description__"
    		thumbnail="https://github.com/ingomohr/jira-versions-gadget/releases/download/1.0/gadget-thumbnail.png">
    		>
        <Optional feature="gadget-directory">
            <Param name="categories">
                JIRA
            </Param>
        </Optional>
        <Optional feature="atlassian.util" />
        <Optional feature="auth-refresh" />
        <Require feature="views" />
        <Require feature="dynamic-height"/>
        <Require feature="settitle"/>
 		<Require feature="setprefs"/>
        <Require feature="oauthpopup"/>
        #oauth
        <Locale messages="__ATLASSIAN_BASE_URL__/download/resources/org.ingomohr.jira.jira-versions-gadget/i18n/ALL_ALL.xml"/>
    </ModulePrefs>
    <UserPref name="project_keys" display_name="Included projects" required="false" default_value=""/>
    <UserPref name="max_num_versions" display_name="Max. versions" required="false" default_value="10"/>
    
    <Content type="html" view="profile">
        <![CDATA[
        #requireResource("com.atlassian.jira.gadgets:common")
        #requireResource("com.atlassian.gadgets.publisher:ajs-gadgets")
        #requireResource("org.ingomohr.jira.jira-versions-gadget:jira-versions-gadget-resources")
        #includeResources()
        
        <script type="text/javascript">
            (function () {
                var gadget = AJS.Gadget({
                    baseUrl: "__ATLASSIAN_BASE_URL__",
                    useOauth: "/rest/gadget/1.0/currentUser",
                    view: {
                        template: function(args) {
                            var gadget = this;
                            
                            var versionList = AJS.$("<table id=\"sortableVersionsTable\" class=\"aui aui-table-sortable\"/>");

                            versionList.append(
                            	AJS.$("<thead/>").append(
                                	AJS.$("<tr/>").append(
                                    	AJS.$("<th/>"),
                                    	AJS.$("<th/>").text("Version"),
	                                    AJS.$("<th/>").text("Project"),
	                                    AJS.$("<th/>").text("Release Date"),
	                                    AJS.$("<th/>").text("Description")
                                    )
                            	)
	                        );
	                        
	                        var body = AJS.$("<tbody/>");
	                        
	                        let filteredVersions = filterVersions(args.versionData.versions);
	                        
                            AJS.$(filteredVersions).each(function() {
                                body.append(
                                    AJS.$("<tr/>").append(
	                                    AJS.$("<td/>").append(
	                                        AJS.$("<span/>").attr({
	                                        	class: "aui-lozenge aui-lozenge-success"
	                                        }).text("RELEASED")
	                                    ),
	                                    
	                                    AJS.$("<td/>").append(
		                                    AJS.$("<a/>").attr({
		                                            target: "_parent",
		                                            title: gadgets.util.escapeString(this.id),
		                                            href: "__ATLASSIAN_BASE_URL__" + "/projects/" + this.projectKey + "/versions/" + this.id
	                                        }).text(this.name)        
	                                    ),
	                                    
	                                    AJS.$("<td/>").text(this.projectKey),
	                                    AJS.$("<td/>").text(this.releaseDate),
	                                    AJS.$("<td/>").text(this.description)
	                                )
                                );
                            });
                            
                            versionList.append(body);

                            gadget.getView().html(versionList);
                        },
                        args: [{
                            key: "versionData",
                            ajaxOptions: function() {
                                return {
                                    url: "/rest/jira-versions-gadget/1.0/versions.json"
                                };
                            }
                        }]
                    }
                });
            })();
            
   			function filterVersionsByProjectNames(versions) {
				let prefs = "__UP_project_keys__";
				if (prefs === "") {
					return versions;
				} else {
					let filteredVersions = versions.filter(v => prefs.includes(v.projectKey));
					return filteredVersions;
				}
			}
 
            
			function filterVersions(versions) {
				let versionsByProjects = filterVersionsByProjectNames(versions);
			
				let prefs = "__UP_max_num_versions__";
				console.log("Max num of versions to display: <" + prefs + ">");
				if (prefs === "") {
					return versionsByProjects;
				} else {
					let filteredVersions = versionsByProjects.slice(0, prefs);
					return filteredVersions;
				}
			}
            
            
        </script>
        ]]>
    </Content>
</Module>